# Application name
spring.application.name=kt-event-saas

# OpenAI API key settings (set your actual API key)
spring.ai.openai.api-key=your-api-key-here
# spring.ai.openai.speech.api-key=your-api-key-here

# Database settings for the development environment
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
spring.datasource.username=myuser
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate settings (ddl-auto=none is recommended when using Flyway)
spring.jpa.hibernate.ddl-auto=none

# Enable SQL logging
spring.jpa.show-sql=true

# Enable Flyway migration
spring.flyway.enabled=true

# Disable open-in-view (good practice for API applications)
spring.jpa.open-in-view=false

# --- HikariCP: discard invalid/aborted connections ---
# Validate connections with a lightweight query before borrowing/returning.
spring.datasource.hikari.connection-test-query=SELECT 1

# Time-out for the validation query (milliseconds).
spring.datasource.hikari.validation-timeout=5000

# Run the test query in an isolated transaction to avoid clearing ABORT state.
spring.datasource.hikari.isolate-internal-queries=true

# Keep retrying during application startup until the database is ready.
spring.datasource.hikari.initialization-fail-timeout=0

# Enable all actuator endpoints to make Swagger UI accessible
management.endpoints.web.exposure.include=*

# Enable Flyway clean() for integration tests only.
# WARNING: This allows database schema to be dropped and recreated. Use with caution.
spring.flyway.clean-disabled=false

# show spring security debug log
logging.level.org.springframework.security=DEBUG

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# JWT secret key (should be at least a Base64-encoded string)
jwt.secret=your-very-secret-key

# JWT expiration time in milliseconds (e.g., 3600000 = 1 hour).
jwt.expire-length=3600000

# Set the GraphQL HTTP endpoint path
spring.graphql.path=/graphql

# Load modular GraphQL schemas: shared base types + domain-specific extensions
spring.graphql.schema.locations=classpath:graphql/,graphql/organizer/,classpath:graphql/customer/

# Always include error message in the GraphQL response
spring.graphql.error.include-message=always

# Always include full stack trace in the GraphQL response
spring.graphql.error.include-stacktrace=always

# Enable GraphQL exception handlers to return full stack traces in Playground
# graphql.servlet.exception-handlers-enabled=true

# Enable GraphQL debug mode to include detailed error information in Playground
# graphql.servlet.debug=true

spring.docker.compose.enabled=false
