
graph TD

subgraph TenantBC["Bounded Context: Tenant"]

subgraph Tenant_WebApp["Web Application (Presentation Layer)"]
Controller["TenantAdminController"]
DTO["CreateTenantRequest / TenantResponse"]
Mapper["TenantDtoMapper"]
end

subgraph Tenant_Application["Application Layer"]
UseCase["TenantApplicationService"]
end

subgraph Tenant_Domain["Domain Layer"]
Tenant["Tenant (Entity)"]
TenantName["TenantName (ValueObject)"]
DomainRepo["TenantRepository (Interface)"]
end

subgraph Tenant_Infrastructure["Infrastructure Layer"]
JpaRepo["TenantJpaRepository (JPA Impl)"]
Entity["TenantEntity (JPA Entity)"]
Database["PostgreSQL (RDB)"]
end

end

%% DTOを通じてHTTPリクエスト/レスポンスがやり取りされる
DTO --> Controller

%% DTO ⇄ ドメイン変換を担う（MapperはController内やServiceで使用される）
Mapper --> Controller

%% プレゼンテーション層からアプリケーション層へ処理委譲
Controller --> UseCase

%% ドメイン層のRepositoryインターフェースを呼び出す
UseCase --> DomainRepo

%% ドメイン内エンティティ/VO（ValueObject）
DomainRepo --> Tenant
DomainRepo --> TenantName

%% インフラのJpaRepoがドメインのインターフェースを実装
JpaRepo -. implements .-> DomainRepo

%% JPAエンティティを操作して取得や永続化（CRUD）
JpaRepo --> Entity

%% エンティティはRDBにマッピングされる
Entity --> Database
